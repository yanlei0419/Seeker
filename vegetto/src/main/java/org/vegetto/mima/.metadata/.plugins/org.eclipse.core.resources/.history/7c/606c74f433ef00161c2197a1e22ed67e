package org.vegetto.common.base.db.result;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import org.vegetto.common.base.db.interfaces.IRowProcessor;
import org.vegetto.common.base.db.util.BeanFactory;

/**
 * 处理行数据
 */
@Deprecated
public class RowProcessor implements IRowProcessor {
	private static final BeanFactory defaultFactory = new BeanFactory();

	private static final RowProcessor instance = new RowProcessor();
	private final BeanFactory factory;

	@Deprecated
	public static RowProcessor instance() {
		return instance;
	}

	/**
	 * 如果不存在用默认转换bean的
	 */
	public RowProcessor() {
		this(defaultFactory);
	}

	public RowProcessor(BeanFactory factory) {
		this.factory = factory;
	}

	public Object[] toArray(ResultSet rs) throws SQLException {
		ResultSetMetaData meta = rs.getMetaData();
		int cols = meta.getColumnCount();
		Object[] result = new Object[cols];

		for (int i = 0; i < cols; i++) {
			result[i] = rs.getObject(i + 1);
		}

		return result;
	}

	public <T> T toBean(ResultSet rs, Class<T> type) throws SQLException {
		return this.factory.toEntity(rs, type);
	}

	public <T> List<T> toBeanList(ResultSet rs, Class<T> type) throws SQLException {
		return this.factory.toListEntity(rs, type);
	}

	public Map<String, Object> toMap(ResultSet rs) throws SQLException {
		Map result = new HashMap(null);
		ResultSetMetaData rsmd = rs.getMetaData();
		int cols = rsmd.getColumnCount();
		for (int i = 1; i <= cols; i++) {
			result.put(rsmd.getColumnName(i), rs.getObject(i));
		}
		return result;
	}

}